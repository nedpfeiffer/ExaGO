#!/bin/bash
#SBATCH --nodes=1
#SBATCH --cpus-per-task=1
#SBATCH --job-name=exago
#SBATCH --output=profile_exago.%J
#SBATCH --time=40:00
#SBATCH --error=profile_exago.%J
#SBATCH --gres=gpu:1
#SBATCH -A EXASGD
#SBATCH -p newell
#SBATCH --ntasks-per-node=1

## Total application for CPU, Hybrid, and CPU+GPU

## Change this install directory to point to your EXAGO installation
## -----------------------------------------------------------------
install_dir=$EXAGO_DIR/newell/install

NETFILES=($EXAGO_DIR/datafiles/case_ACTIVSg200.m $EXAGO_DIR/datafiles/case_ACTIVSg500.m $EXAGO_DIR/datafiles/case_ACTIVSg2000.m $EXAGO_DIR/datafiles/case_ACTIVSg10k.m)
sys_sizes=("200" "500" "2000" "10k")

echo "ExaGO(CPU) + IPOPT(CPU)"
for i in 0 1 2
do
  cmd="mpiexec -n 1 $install_dir/bin/app_opflow -opflow_solver IPOPT -opflow_model POWER_BALANCE_POLAR -netfile ${NETFILES[i]} -opflow_initialization ACPF -pflow_snes_linesearch_type basic -pflow_pc_type lu -pflow_pc_factor_mat_ordering_type qmd -log_view -opflow_ignore_lineflow_constraints 0"
  arr=`${cmd}`
  arrsolve=`echo "${arr}" | grep -i 'OPFLOWSolve'`
  splitarrsolve=($arrsolve)
  arropflowobj=`echo "${arr}" | grep -i 'OPFLOWObj'`
  splitarropflowobj=($arropflowobj)
  arropflowgrad=`echo "${arr}" | grep -i 'OPFLOWGrad'`
  splitarropflowgrad=($arropflowgrad)
  arropfloweqcons=`echo "${arr}" | grep -i 'OPFLOWEqCons'`
  splitarropfloweqcons=($arropfloweqcons)
  arropflowineqcons=`echo "${arr}" | grep -i 'OPFLOWIneqCons'`
  splitarropflowineqcons=($arropflowineqcons)

  arropfloweqconsjac=`echo "${arr}" | grep -i 'OPFLOWEqConsJac'`
  splitarropfloweqconsjac=($arropfloweqconsjac)
  arropflowineqconsjac=`echo "${arr}" | grep -i 'OPFLOWIneqConsJac'`
  splitarropflowineqconsjac=($arropflowineqconsjac)

  arropflowhess=`echo "${arr}" | grep -i 'OPFLOWHess'`
  splitarropflowhess=($arropflowhess)


  echo "${sys_sizes[i]}"
  echo "Kernel          Time (s)        MFlops/sec"
  echo "------------------------------------------"
  echo "Objective       ${splitarropflowobj[3]}    ${splitarropflowobj[20]}"
  echo "Gradient        ${splitarropflowgrad[3]}    ${splitarropflowgrad[20]}"
  echo "EqCons       ${splitarropfloweqcons[3]}    ${splitarropfloweqcons[20]}"
  echo "IneqCons     ${splitarropflowineqcons[3]}    ${splitarropflowineqcons[20]}"
  echo "EqConsJac      ${splitarropfloweqconsjac[3]}    ${splitarropfloweqconsjac[20]}"
  echo "IneqConsJac    ${splitarropflowineqconsjac[3]}    ${splitarropflowineqconsjac[20]}"
  echo "Hessian         ${splitarropflowhess[3]}    ${splitarropflowhess[20]}"

  echo "Solve (total)   ${splitarrsolve[3]}"
  echo ""

done

echo "ExaGO(GPU) + HIOP(GPU)"
for i in 0 1 2
do
  cmd="mpiexec -n 1 $install_dir/bin/app_opflow -opflow_solver HIOPNEW -opflow_model PBPOLRAJAHIOP -hiop_compute_mode HYBRID -hiop_verbosity_level 0 -netfile ${NETFILES[i]} -opflow_initialization ACPF -pflow_snes_linesearch_type basic -pflow_pc_type lu -pflow_pc_factor_mat_ordering_type qmd -log_view -opflow_ignore_lineflow_constraints 0"
  arr=`${cmd}`
  arrsolve=`echo "${arr}" | grep -i 'OPFLOWSolve'`
  splitarrsolve=($arrsolve)
  arropflowobj=`echo "${arr}" | grep -i 'OPFLOWObj'`
  splitarropflowobj=($arropflowobj)
  arropflowgrad=`echo "${arr}" | grep -i 'OPFLOWGrad'`
  splitarropflowgrad=($arropflowgrad)
  arropfloweqcons=`echo "${arr}" | grep -i 'OPFLOWEqCons'`
  splitarropfloweqcons=($arropfloweqcons)
  arropflowineqcons=`echo "${arr}" | grep -i 'OPFLOWIneqCons'`
  splitarropflowineqcons=($arropflowineqcons)

  arropfloweqconsjac=`echo "${arr}" | grep -i 'OPFLOWEqConsJac'`
  splitarropfloweqconsjac=($arropfloweqconsjac)
  arropflowineqconsjac=`echo "${arr}" | grep -i 'OPFLOWIneqConsJac'`
  splitarropflowineqconsjac=($arropflowineqconsjac)

  arropflowhess=`echo "${arr}" | grep -i 'OPFLOWHess'`
  splitarropflowhess=($arropflowhess)


  echo "${sys_sizes[i]}"
  echo "Kernel          Time (s)        MFlops/sec"
  echo "------------------------------------------"
  echo "Objective       ${splitarropflowobj[3]}    ${splitarropflowobj[20]}"
  echo "Gradient        ${splitarropflowgrad[3]}    ${splitarropflowgrad[20]}"
  echo "EqCons       ${splitarropfloweqcons[3]}    ${splitarropfloweqcons[20]}"
  echo "IneqCons     ${splitarropflowineqcons[3]}    ${splitarropflowineqcons[20]}"
  echo "EqConsJac      ${splitarropfloweqconsjac[3]}    ${splitarropfloweqconsjac[20]}"
  echo "IneqConsJac    ${splitarropflowineqconsjac[3]}    ${splitarropflowineqconsjac[20]}"
  echo "Hessian         ${splitarropflowhess[3]}    ${splitarropflowhess[20]}"

  echo "Solve (total)   ${splitarrsolve[3]}"
  echo ""

done

echo "ExaGO(CPU) + HIOP(GPU)"
for i in 0 1 2
do
  cmd="mpiexec -n 1 $install_dir/bin/app_opflow -opflow_solver HIOPNEW -opflow_model POWER_BALANCE_HIOP -hiop_compute_mode HYBRID -hiop_verbosity_level 0 -netfile ${NETFILES[i]} -opflow_initialization ACPF -pflow_snes_linesearch_type basic -pflow_pc_type lu -pflow_pc_factor_mat_ordering_type qmd -log_view -opflow_ignore_lineflow_constraints 0"
  arr=`${cmd}`
  arrsolve=`echo "${arr}" | grep -i 'OPFLOWSolve'`
  splitarrsolve=($arrsolve)
  arropflowobj=`echo "${arr}" | grep -i 'OPFLOWObj'`
  splitarropflowobj=($arropflowobj)
  arropflowgrad=`echo "${arr}" | grep -i 'OPFLOWGrad'`
  splitarropflowgrad=($arropflowgrad)
  arropfloweqcons=`echo "${arr}" | grep -i 'OPFLOWEqCons'`
  splitarropfloweqcons=($arropfloweqcons)
  arropflowineqcons=`echo "${arr}" | grep -i 'OPFLOWIneqCons'`
  splitarropflowineqcons=($arropflowineqcons)

  arropfloweqconsjac=`echo "${arr}" | grep -i 'OPFLOWEqConsJac'`
  splitarropfloweqconsjac=($arropfloweqconsjac)
  arropflowineqconsjac=`echo "${arr}" | grep -i 'OPFLOWIneqConsJac'`
  splitarropflowineqconsjac=($arropflowineqconsjac)

  arropflowhess=`echo "${arr}" | grep -i 'OPFLOWHess'`
  splitarropflowhess=($arropflowhess)

  echo "${sys_sizes[i]}"
  echo "Kernel          Time (s)        MFlops/sec"
  echo "------------------------------------------"
  echo "Objective       ${splitarropflowobj[3]}    ${splitarropflowobj[20]}"
  echo "Gradient        ${splitarropflowgrad[3]}    ${splitarropflowgrad[20]}"
  echo "EqCons       ${splitarropfloweqcons[3]}    ${splitarropfloweqcons[20]}"
  echo "IneqCons     ${splitarropflowineqcons[3]}    ${splitarropflowineqcons[20]}"
  echo "EqConsJac      ${splitarropfloweqconsjac[3]}    ${splitarropfloweqconsjac[20]}"
  echo "IneqConsJac    ${splitarropflowineqconsjac[3]}    ${splitarropflowineqconsjac[20]}"
  echo "Hessian         ${splitarropflowhess[3]}    ${splitarropflowhess[20]}"

  echo "Solve (total)   ${splitarrsolve[3]}"
  echo ""
done

echo "ExaGO(CPU) + HIOP(CPU)"
for i in 0 1 2
do
  cmd="mpiexec -n 1 $install_dir/bin/app_opflow -opflow_solver HIOPNEW -opflow_model POWER_BALANCE_HIOP -hiop_compute_mode CPU -hiop_verbosity_level 0 -netfile ${NETFILES[i]} -opflow_initialization ACPF -pflow_snes_linesearch_type basic -pflow_pc_type lu -pflow_pc_factor_mat_ordering_type qmd -log_view -opflow_ignore_lineflow_constraints 0"
  arr=`${cmd}`
  arrsolve=`echo "${arr}" | grep -i 'OPFLOWSolve'`
  splitarrsolve=($arrsolve)
  arropflowobj=`echo "${arr}" | grep -i 'OPFLOWObj'`
  splitarropflowobj=($arropflowobj)
  arropflowgrad=`echo "${arr}" | grep -i 'OPFLOWGrad'`
  splitarropflowgrad=($arropflowgrad)
  arropfloweqcons=`echo "${arr}" | grep -i 'OPFLOWEqCons'`
  splitarropfloweqcons=($arropfloweqcons)
  arropflowineqcons=`echo "${arr}" | grep -i 'OPFLOWIneqCons'`
  splitarropflowineqcons=($arropflowineqcons)

  arropfloweqconsjac=`echo "${arr}" | grep -i 'OPFLOWEqConsJac'`
  splitarropfloweqconsjac=($arropfloweqconsjac)
  arropflowineqconsjac=`echo "${arr}" | grep -i 'OPFLOWIneqConsJac'`
  splitarropflowineqconsjac=($arropflowineqconsjac)

  arropflowhess=`echo "${arr}" | grep -i 'OPFLOWHess'`
  splitarropflowhess=($arropflowhess)


  echo "${sys_sizes[i]}"
  echo "Kernel          Time (s)        MFlops/sec"
  echo "------------------------------------------"
  echo "Objective       ${splitarropflowobj[3]}    ${splitarropflowobj[20]}"
  echo "Gradient        ${splitarropflowgrad[3]}    ${splitarropflowgrad[20]}"
  echo "EqCons       ${splitarropfloweqcons[3]}    ${splitarropfloweqcons[20]}"
  echo "IneqCons     ${splitarropflowineqcons[3]}    ${splitarropflowineqcons[20]}"
  echo "EqConsJac      ${splitarropfloweqconsjac[3]}    ${splitarropfloweqconsjac[20]}"
  echo "IneqConsJac    ${splitarropflowineqconsjac[3]}    ${splitarropflowineqconsjac[20]}"
  echo "Hessian         ${splitarropflowhess[3]}    ${splitarropflowhess[20]}"

  echo "Solve (total)   ${splitarrsolve[3]}"
  echo ""
done
