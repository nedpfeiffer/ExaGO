import os
from typing import Dict

_version = "@CMAKE_PROJECT_VERSION@"
_install_dir = "@CMAKE_INSTALL_PREFIX@"
_shared_library_suffix = "@CMAKE_SHARED_LIBRARY_SUFFIX@"
_library_dir = os.path.join(_install_dir, 'lib')
_library_names = ('utils', 'ps', 'pflow', 'opflow',
                  'sopflow', 'scopflow', 'tcopflow')

def _wrap_lib_name(path) -> str:
    '''Wraps raw library name with absolute path and correct exago library
    prefix and suffix'''
    return os.path.join(
        _library_dir,
        'libexago_' + path + _shared_library_suffix
    )


# Dictionary which contains all the exago libraries along with the absolute
# paths to each library.
_library_paths: Dict[str, str] = {
    lib_name: _wrap_lib_name(lib_name) for lib_name in _library_names
}

def prefix() -> str:
    '''Return the absolute path to the ExaGO installation prefix'''
    return _install_dir

def libraries() -> Dict[str, str]:
    '''Returns a dictionary with ExaGO libraries as the keys, and each value
    contains the absolute path to the installed library.'''
    return _library_paths

def version() -> str:
    '''Return the full version string'''
    return _version

def version_major() -> int:
    '''Return the major version'''
    return int(_version.split('.')[0])

def version_minor() -> int:
    '''Return the minor version'''
    return int(_version.split('.')[1])

def version_patch() -> int:
    '''Return the patch version'''
    return int(_version.split('.')[2])

